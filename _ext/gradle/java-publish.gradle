apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

def isSnapshot = version.endsWith('-SNAPSHOT')
// pulls the credentials from either the environment variable or gradle.properties
def lookup = { key, defaultVal ->
	if (System.env[key] != null) {
		return System.env[key]
	} else if (project.hasProperty(key)) {
		return project[key]
	} else {
		return defaultVal
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {

			groupId project.group
			artifactId project.artifactId
			version project.version
			from components.java
			artifact sourcesJar
			artifact javadocJar

			pom.withXml {

				// add MavenCentral requirements to the POM
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name project.artifactId
					description project.description
					url "https://github.com/${project.org}/${rootProject.name}"
					scm {
						url "https://github.com/${project.org}/${rootProject.name}"
						connection "scm:git:https://github.com/${project.org}/${rootProject.name}.git"
						developerConnection "scm:git:ssh:git@github.com/${project.org}/${rootProject.name}.git"
					}
					licenses {
						license {
							name 'Eclipse Public License - v 1.0'
							url 'https://www.eclipse.org/legal/epl-v10.html'
							distribution 'repo'
						}
					}
					developers {
						project.ext.developers.each { extId, extValues -> 
							developer {
								id extId
								name extValues['name']
								email extValues['email']
							}
						}
					}
				}
			}
		}
	}
	if (isSnapshot) {
		// upload snapshots to oss.sonatype.org
		repositories {
			maven {
				url = lookup('snapshot_url', 'https://oss.sonatype.org/content/repositories/snapshots')
				credentials {
					username = lookup('nexus_user', 'unknown_nexus_user')
					password = lookup('nexus_pass', 'unknown_nexus_pass')
				}
			} 
    }
	}
}

if (!isSnapshot) {
	// upload releases to bintray and then mavenCentral
	bintray {
		user = lookup('bintray_user', 'unknown_bintray_user')
		key = lookup('bintray_pass', 'unknown_bintray_pass')
		publications = [
			'mavenJava'
		]
		publish = true
		pkg {
			repo = 'opensource'
			name = project.artifactId
			userOrg = project.org
			version {
				name = project.version
				mavenCentralSync {
					user = lookup('nexus_user', 'unknown_nexus_user')
					password = lookup('nexus_pass', 'unknown_nexus_user')
				}
			}
		}
	}

	publish.dependsOn(bintrayUpload)
	bintrayUpload.dependsOn([
		'generatePomFileForMavenJavaPublication',
		jar,
		sourcesJar,
		javadocJar
	])
}
